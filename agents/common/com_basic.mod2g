use commonKnowledge as knowledge.
use failure as knowledge.
use updateSequence as module.
order=linearall.

module comBasic {
	% Make sure we do not process messages from the previous round. 
	forall bel( msg(Agt, MSG) ) do delete( msg(Agt, MSG) ).
	%insert all messages as beliefs so we can have some of them 'fail' to arrive later.
	forall (Agt).sent(msg(MSG) ) do insert( msg(Agt, MSG) ).
	forall bel( msg(Agt, MSG), dropChance(DropChance), random(N), N < DropChance ) do delete( msg(Agt, MSG) ).
	
	% deduce information based on deliveries of other agents:
	forall bel( msg(_, delivered(BlockID)) ) do updateSequence(BlockID).
}