use commonKnowledge as knowledge.
order=linear.

module adoptgoals{
	%If holding the next needed block go to the dropzone.
	if bel( holdingNextBlock ) then adopt(in('DropZone')).
	if bel( ahead(N), M is N-1, holdingNeededBlock(N) ) then adopt(at('FrontDropZone')).
			
	%Otherswise, If the next needed block is known then adopt a goal to go there and hold it.
	if a-goal(in(Place), holding(BlockID)), bel( ahead(N), nextNeededColor(ColorID, N), 
		not(block(BlockID, ColorID, _)) ) then drop( in(Place), holding(BlockID) ).
	if bel( ahead(N), not(holdingNextBlock), M is N-1, not(holdingNeededBlock(M)), 
		nextNeededColor(ColorID, N), block(BlockID, ColorID, Place)) then 
		adopt(in(Place),holding(BlockID)).
	if bel( not(ahead(_)), not(holdingNextBlock), nextNeededColor(ColorID), 
		block(BlockID, ColorID, Place)) then adopt(in(Place),holding(BlockID)).
			
	%Otherwise go to a random room we haven't seen yet'.
	if bel( not(ahead(_)), not(holdingNextBlock), not(finished), 
		bagof( Place,( room(Place), not(dropZone(Place)), not(visited(Place)) ), Places ), 
		random_member(Dest, Places) ) then adopt(in(Dest)).
	if bel( ahead(N), not(holdingNextBlock), not(holdingNeededBlock(N)), not(finished), 
		bagof( Place, ( room(Place), not(dropZone(Place)), not(visited(Place)) ), Places ), 
		random_member(Dest, Places) ) then adopt(in(Dest)).
}